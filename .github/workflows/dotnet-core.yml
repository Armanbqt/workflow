name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        os: [windows-latest]       
  #      dotnet: ['netcoreapp2.1', 'netcoreapp3.1']

    steps:
#    - name: Super-Linter
 #     uses: github/super-linter@v3.13.5
  #    env:
   #      DEFAULT_BRANCH: master
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-2
    #######################################
    
    - uses: actions/checkout@v2
    - name: ðŸ”¨ Use .NET Core 2.1 SDK
      uses: actions/setup-dotnet@v1
      with:
          dotnet-version: '2.1.x'
    - name: ðŸ”¨ Use .NET Core 3.1 SDK
      uses: actions/setup-dotnet@v1
      with:
          dotnet-version: '3.1.x'
    - name: ðŸª“ **DOTNET HACK** ðŸª“
      shell: pwsh
      run: |
          $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
          $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
          $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
          foreach ($dir in $directories) {
            $from = $dir.FullName;
            $to = "$root/$version";
            Write-Host Copying from $from to $to;
            Copy-Item "$from\*" $to -Recurse -Force;
          }
    
    #######################################
#    - uses: actions/checkout@v2
 #   - name: Setup .NET Core
  #    uses: actions/setup-dotnet@v1
   #   with:
    #    dotnet-version: ${{ matrix.dotnet }}
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Run Unit Test
      run: dotnet test Amazon.QLDB.Driver.Tests
    - name: Integration Test
      run: dotnet test --no-restore --verbosity normal --settings Amazon.QLDB.Driver.IntegrationTests/.runsettings
